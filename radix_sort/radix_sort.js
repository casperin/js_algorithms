// Generated by CoffeeScript 1.7.1
(function() {
  var flatten, generateRandomList, getDigitAt, radix_random, radix_sort;

  radix_random = function(count, numOfDigits) {
    var randomList, sortedList;
    randomList = generateRandomList(count, numOfDigits);
    sortedList = radix_sort(randomList);
    return "Random: " + (randomList.join(' ')) + "\n Sorted: " + (sortedList.join(' '));
  };

  generateRandomList = function(count, numOfDigits) {
    var list, _, _i;
    list = [];
    for (_ = _i = 0; 0 <= count ? _i <= count : _i >= count; _ = 0 <= count ? ++_i : --_i) {
      list.push(Math.floor(Math.random() * Math.pow(10, numOfDigits)));
    }
    return list;
  };

  radix_sort = function(list) {
    var buffer, digit, int, _i, _j, _len, _ref;
    for (digit = _i = 0, _ref = Math.max.apply(Math, list).toString().length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; digit = 0 <= _ref ? ++_i : --_i) {
      buffer = [[], [], [], [], [], [], [], [], [], []];
      for (_j = 0, _len = list.length; _j < _len; _j++) {
        int = list[_j];
        buffer[getDigitAt(digit, int)].push(int);
      }
      list = flatten(buffer);
    }
    return list;
  };

  getDigitAt = function(position, int) {
    var str;
    str = int.toString();
    return +str.charAt(str.length - position - 1);
  };

  flatten = function(buffer) {
    var array, int, list, _i, _j, _len, _len1;
    list = [];
    for (_i = 0, _len = buffer.length; _i < _len; _i++) {
      array = buffer[_i];
      for (_j = 0, _len1 = array.length; _j < _len1; _j++) {
        int = array[_j];
        list.push(int);
      }
    }
    return list;
  };

  console.log('radix_random(20, 2)');

  console.log(radix_random(20, 2));

  window.radix_random = radix_random;

  window.radix_sort = radix_sort;

}).call(this);

//# sourceMappingURL=radix_sort.map
